services:
  db:
    build: infra/postgres/.
    container_name: pg_db
    environment:
      PGUSER: ${PGUSER}
      PGDATABASE: ${PGDATABASE}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    restart: on-failure:5
    networks:
      - app_net

  clickhouse:
    build: infra/clickhouse/.
    container_name: ch_db
    environment:
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:8123/ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    restart: on-failure:5
    networks:
      - app_net

  core:
    build:
      context: .
      dockerfile: src/Dockerfile
    container_name: backend
    environment:
      PGUSER: ${PGUSER}
      PGDATABASE: ${PGDATABASE}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PG_HOST: ${PG_HOST}
      PG_PORT: ${PG_PORT}
      CLICKHOUSE_HOST: ${CLICKHOUSE_HOST}
      CLICKHOUSE_PORT: ${CLICKHOUSE_PORT}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      CLICKHOUSE_DB: ${CLICKHOUSE_DB}
    volumes:
      - static:/usr/app/static
      - ./src:/usr/app
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "-H", "X-SCHEMA: public", "http://localhost:8000/admin/"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - app_net

  nginx:
    image: nginx:1.29
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./infra/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - static:/static
    depends_on:
      core:
        condition: service_healthy
    networks:
      - app_net

volumes:
  static:
  postgres_data:
  clickhouse_data:
networks:
  app_net:
    driver: bridge